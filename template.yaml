AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Example Node AWS SAM application Integrates with Terraform deployed infrastructure

Parameters:
  AppName:
    Type: String
    Description: Name of application (no spaces). Value must be globally unique
    Default: linkage
  Environment:
    Type: String
    Description: Name of application (no spaces). Value must be globally unique
    Default: dev
  IdentityRoleARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Identity Authorizer lambda Role ARN
    Default: /dev/linkage/identity_authorize_role_arn
  RecruitmentRequestsRoleARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Recruitment Requests lambda Role ARN
    Default: /dev/linkage/recruitment_requests_role_arn
  SNSTopicARN:
    Type: AWS::SSM::Parameter::Value<String>
    Description: SNS Topic ARN for UserFunction to publish messages on SNS
    Default: /dev/linkage/sns_topic_arn
  DebugSampleRate:
    Type: Number
    Description: Percentage of debug logging printed to CloudWatch on Production environment
    Default: 0.05
  LambdaCanaryType:
    Type: String
    Description: Sets the Canary deployment configuration, e.g. LambdaAllAtOnce, LambdaCanary10Percent5Minutes, LambdaLinear10PercentEvery1Minute, etc. See https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html
    Default: Canary10Percent5Minutes
  APITimeout:
    Type: Number
    Description: Sets the timeout in millis for all API endpoints
    Default: 4000

Globals:
  Function:
    Runtime: python3.7
    Timeout: 4
    ReservedConcurrentExecutions: 10
    MemorySize: 256
    AutoPublishAlias: live
    Tracing: Active
    Layers:
    - Ref: LambdaLayer
    Tags:
      Environment:
        Ref: Environment
      Name:
        Ref: AppName

Resources:

  # API Gateway
  Api:
    Type: AWS::Serverless::Api
    Cors: # https://awslabs.github.io/aws-lambda-powertools-python/latest/core/event_handler/api_gateway/#cors
        # AllowOrigin: "'https://example.com'"
        AllowOrigin: "'*'"  # Dev only
        AllowHeaders: "'Content-Type,Authorization,X-Amz-Date'"
        MaxAge: "'300'"
    Properties:
      Name:
        Fn::Sub: ${Environment}-${AppName}-api
      EndpointConfiguration: EDGE
      StageName: dev
      TracingEnabled: true
      MethodSettings:
      - HttpMethod: '*'
        ResourcePath: /*
        DataTraceEnabled: true
        LoggingLevel: ERROR
        MetricsEnabled: true
        ThrottlingBurstLimit: 10
        ThrottlingRateLimit: 20
      Auth:
        Authorizers:
          BasicAuthorizer:
            FunctionPayloadType: TOKEN
            FunctionArn: !ImportValue IdentityAuthorizeFunctionArn
            Identity:
              Header: Authorization
              ValidationExpression: ^[Bb]earer [-0-9a-zA-z\.]*$
              ReauthorizeEvery: 0
        DefaultAuthorizer: BasicAuthorizer
      Tags:
        Environment:
          Ref: Environment
        Name:
          Ref: AppName

  # Lambda Functions
  IdentityAuthorizeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-identity-authorize
      Description: Provides all Cognito functions through 4 API Rest calls
      CodeUri: src/
      Handler: identity_authorize/operations/customAuthorizer.lambdaHandler
      Layers:
        - !Ref LambdaLayer
      Events:
        IdentityAuthorize:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api/v1/identity/authorize
            Method: post
      Role:
        Ref: IdentityAuthorizeRoleARN
      DeploymentPreference:
        Type: 
          Ref: LambdaCanaryType
        Alarms:
        - Ref: IdentityAuthorizeCanaryErrorsAlarm
      Environment:
        Variables:
          DEBUG_SAMPLE_RATE:
            Ref: DebugSampleRate

  RecruitmentRequestsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${Environment}-${AppName}-recruitment-requests
      Description: Provides all Recruitment request related functions
      CodeUri: src/
      Handler: recruitment_requests/operations/getRecruitmentRequests.lambdaHandler
      Layers:
        - !Ref LambdaLayer
      Events:
        IdentityAuthorize:
          Type: HttpApi # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /api/v1/recruitment/requests
            Method: get
      Role:
        Ref: RecruitmentRequestsRoleARN
      DeploymentPreference:
        Type:
          Ref: LambdaCanaryType
        Alarms:
        - Ref: RecruitmentRequestsCanaryErrorsAlarm
      Environment:
        Variables:
          DEBUG_SAMPLE_RATE:
            Ref: DebugSampleRate
          SNS_TOPIC:
            Ref: SNSTopicARN

  
  # Lambda Layer
  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${Environment}-${AppName}-layer
      Description:
        Fn::Sub: Lambda layer for ${Environment}-${AppName}-layer application
      ContentUri: ./python/lib/python3.7/site-packages/
      CompatibleRuntimes:
        - python3.7
      RetentionPolicy: Retain
  
  # CloudWatch Alarms
  IdentityAuthorizeCanaryErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 
        Fn::Sub: ${Environment}-${AppName}-identity-authorize-canary-alarm
      AlarmDescription: Identity Lambda function canary errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      Dimensions:
        - Name: Resource
          Value:
            Fn::Sub: ${IdentityAuthorizeFunction}:live
        - Name: FunctionName
          Value: 
            Ref: IdentityAuthorizeFunction
        - Name: ExecutedVersion
          Value:
            Fn::GetAtt:
            - IdentityAuthorizeFunction
            - Version
            - Version
  RecruitmentRequestsCanaryErrorsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: 
        Fn::Sub: ${Environment}-${AppName}-recruitment-requests-canary-alarm
      AlarmDescription: User Lambda function canary errors
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0
      Dimensions:
        - Name: Resource
          Value:
            Fn::Sub: ${RecruitmentRequestsFunction}:live
        - Name: FunctionName
          Value: 
            Ref: RecruitmentRequestsFunction
        - Name: ExecutedVersion
          Value:
            Fn::GetAtt:
            - RecruitmentRequestsFunction
            - Version
            - Version
  

Outputs:
  ApiID:
    Description: API Gateway Resource ID
    Value:
      Ref: Api
  ApiURL:
    Description: API Gateway endpoint URL for Prod stage for function
    Value:
      Fn::Sub: https://${Api}.execute-api.${AWS::Region}.amazonaws.com/dev/
  IdentityAuthorizeFunction:
    Description: IdentityAuthorize Lambda Function ARN
    Value:
      Fn::GetAtt:
      - IdentityAuthorizeFunction
      - Arn
    Export:
      Name: IdentityAuthorizeFunctionArn
  RecruitmentRequestsFunction:
    Description: RecruitmentRequests Lambda Function ARN
    Value:
      Fn::GetAtt:
      - RecruitmentRequestsFunction
      - Arn
  
